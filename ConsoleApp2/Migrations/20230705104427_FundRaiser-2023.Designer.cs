// <auto-generated />
using System;
using ConsoleApp2.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleApp2.Migrations
{
    [DbContext(typeof(OurDbContext))]
    [Migration("20230705104427_FundRaiser-2023")]
    partial class FundRaiser2023
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsoleApp2.Models.Backer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectsId");

                    b.ToTable("Backers");
                });

            modelBuilder.Entity("ConsoleApp2.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectsId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ConsoleApp2.Models.ProjectCreator", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProjectCreators");
                });

            modelBuilder.Entity("ConsoleApp2.Models.ProjectFunding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountContributed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BackerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BackerId");

                    b.HasIndex("ProjectsId");

                    b.ToTable("ProjectFundings");
                });

            modelBuilder.Entity("ConsoleApp2.Models.ProjectPhotos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PhotoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectsId");

                    b.ToTable("ProjectPhotos");
                });

            modelBuilder.Entity("ConsoleApp2.Models.ProjectVideos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProjectsId")
                        .HasColumnType("int");

                    b.Property<string>("VideoName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectsId");

                    b.ToTable("ProjectVideos");
                });

            modelBuilder.Entity("ConsoleApp2.Models.Projects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CurrentFunding")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FundingGoal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProjectCreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectCreatorId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ConsoleApp2.Models.RewardPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("PackageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PackageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectsId")
                        .HasColumnType("int");

                    b.Property<string>("RewardDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectsId");

                    b.ToTable("RewardPackages");
                });

            modelBuilder.Entity("ConsoleApp2.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ConsoleApp2.Models.Backer", b =>
                {
                    b.HasOne("ConsoleApp2.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp2.Models.Projects", null)
                        .WithMany("Backers")
                        .HasForeignKey("ProjectsId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ConsoleApp2.Models.Category", b =>
                {
                    b.HasOne("ConsoleApp2.Models.Projects", "Projects")
                        .WithMany()
                        .HasForeignKey("ProjectsId");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ConsoleApp2.Models.ProjectCreator", b =>
                {
                    b.HasOne("ConsoleApp2.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ConsoleApp2.Models.ProjectFunding", b =>
                {
                    b.HasOne("ConsoleApp2.Models.Backer", "Backer")
                        .WithMany("ProjectFundings")
                        .HasForeignKey("BackerId");

                    b.HasOne("ConsoleApp2.Models.Projects", "Projects")
                        .WithMany("ProjectFundings")
                        .HasForeignKey("ProjectsId");

                    b.Navigation("Backer");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ConsoleApp2.Models.ProjectPhotos", b =>
                {
                    b.HasOne("ConsoleApp2.Models.Projects", "Projects")
                        .WithMany("ProjectPhotos")
                        .HasForeignKey("ProjectsId");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ConsoleApp2.Models.ProjectVideos", b =>
                {
                    b.HasOne("ConsoleApp2.Models.Projects", "Projects")
                        .WithMany("ProjectVideos")
                        .HasForeignKey("ProjectsId");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ConsoleApp2.Models.Projects", b =>
                {
                    b.HasOne("ConsoleApp2.Models.ProjectCreator", "ProjectCreator")
                        .WithMany("Projects")
                        .HasForeignKey("ProjectCreatorId");

                    b.Navigation("ProjectCreator");
                });

            modelBuilder.Entity("ConsoleApp2.Models.RewardPackage", b =>
                {
                    b.HasOne("ConsoleApp2.Models.Projects", "Projects")
                        .WithMany("RewardPackages")
                        .HasForeignKey("ProjectsId");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ConsoleApp2.Models.Backer", b =>
                {
                    b.Navigation("ProjectFundings");
                });

            modelBuilder.Entity("ConsoleApp2.Models.ProjectCreator", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ConsoleApp2.Models.Projects", b =>
                {
                    b.Navigation("Backers");

                    b.Navigation("ProjectFundings");

                    b.Navigation("ProjectPhotos");

                    b.Navigation("ProjectVideos");

                    b.Navigation("RewardPackages");
                });
#pragma warning restore 612, 618
        }
    }
}
